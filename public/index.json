[{"content":"Penjelasan sederhana tentang komponen komputer yang penting untuk dipahami dalam reverse engineering:\n1. CPU (Central Processing Unit) Apa itu? \u0026ldquo;Otak\u0026rdquo; komputer yang menjalankan instruksi program. Fungsi dalam RE: Ketika melakukan reverse engineering, Anda menganalisis bagaimana CPU memproses instruksi dari program (misalnya, bagaimana ia menghitung, membandingkan data, atau melompat ke bagian kode tertentu). Contoh: Saat debugging, Anda melihat instruksi assembly yang dijalankan CPU. CPU itu seperti Koki di Dapur Bayangkan:\nCPU = Koki yang melakukan semua perhitungan dan perintah. Program = Resep masakan yang harus diikuti koki. Ketika kamu menjalankan program (misalnya ls di terminal), CPU membaca instruksinya langkah demi langkah dan menjalankannya.\nContoh Nyata di Linux Kita akan pakai perintah strace untuk melihat instruksi sistem (system calls) yang dijalankan CPU saat sebuah program berjalan.\n1. Jalankan Perintah Sederhana Buka terminal, lalu ketik:\nstrace ls Ini akan menampilkan semua instruksi yang CPU kerjakan saat menjalankan ls (contoh output):\nexecve(\u0026#34;/usr/bin/ls\u0026#34;, [\u0026#34;ls\u0026#34;], 0x7ffd... /* 23 vars */) write(1, \u0026#34;file1.txt file2.txt\\n\u0026#34;, 20) exit(0) Apa Arti Output Ini? execve(): CPU memuat program ls ke memory. write(): CPU menampilkan output (file1.txt file2.txt) ke terminal. exit(): CPU mengakhiri program. Ini adalah \u0026ldquo;bahasa CPU\u0026rdquo; tingkat dasar!\n2. Debugging dengan ltrace (Lebih Sederhana) Jika strace terlalu rumit, coba ltrace untuk melihat fungsi library yang dipanggil:\nltrace ls Output:\nprintf(\u0026#34;file1.txt file2.txt\\n\u0026#34;) = 20 exit(0) Di sini kamu lihat CPU menjalankan printf() untuk menampilkan teks.\n3. Lihat Proses CPU dengan top Jalankan:\ntop Tekan q untuk keluar. Kamu akan melihat daftar program yang sedang CPU kerjakan, seperti:\nPID USER %CPU COMMAND 1234 user 5.0 firefox %CPU: Persentase penggunaan CPU oleh program tersebut. Apa Hubungannya dengan Reverse Engineering? Ketika kamu reverse engineering, kamu ingin tahu:\nInstruksi apa yang CPU jalankan (contoh: strace). Bagaimana program berinteraksi dengan sistem (contoh: ltrace). Nanti kalau sudah terbiasa, baru masuk ke assembly (bahasa mesin CPU).\nSummary untuk Pemula CPU = \u0026ldquo;Koki\u0026rdquo; yang menjalankan perintah. Gunakan strace/ltrace untuk melihat instruksi CPU. Gunakan top untuk melihat beban CPU. 2. Memory (RAM - Random Access Memory) Apa itu? Tempat penyimpanan sementara untuk data dan instruksi yang sedang diproses. Fungsi dalam RE: Menyimpan kode program yang sedang berjalan. Menyimpan variabel/data yang digunakan program. Dalam RE, Anda memeriksa isi memory untuk menemukan password, kunci enkripsi, atau memodifikasi nilai variabel. Contoh: Tools seperti Cheat Engine memanipulasi nilai di memory untuk mengubah perilaku game/program. 1. Analogi Sederhana CPU = Koki yang memasak. RAM = Meja tempat koki menaruh bahan \u0026amp; alat yang sedang dipakai. Hard Disk = Lemari penyimpanan (untuk bahan yang tidak sedang dipakai). 2. Contoh Nyata di Linux a. Melihat Penggunaan RAM Jalankan di terminal:\nfree -h Output:\ntotal used free Mem: 16G 5.2G 10G Swap: 2G 0B 2G Mem: RAM fisik (16GB total, 5.2GB dipakai). Swap: RAM cadangan di hard disk. b. Lihat Program yang Pakai RAM top -o %MEM # Urutkan berdasarkan penggunaan RAM Contoh output:\nPID USER %MEM COMMAND 1234 user 15% chrome 5678 user 8% vscode Artinya:\nGoogle Chrome pakai 15% RAM. VS Code pakai 8% RAM. 3. Reverse Engineering \u0026amp; RAM Dalam RE, RAM adalah tempat kita:\nMencari password (misalnya, game menyimpan nyawa player di RAM). Memodifikasi nilai (misalnya, mengganti \u0026ldquo;skor=100\u0026rdquo; jadi \u0026ldquo;skor=9999\u0026rdquo;). Contoh dengan Cheat Engine (Windows): Buka game (misalnya Plants vs Zombies). Cari nilai \u0026ldquo;sun\u0026rdquo; (misalnya 50) di RAM. Ubah jadi 9999 → Nilai di game langsung berubah! Di Linux, kita bisa pakai scanmem (versi sederhana Cheat Engine):\nsudo apt install scanmem # Install dulu scanmem /proc/[PID_game] # Ganti [PID_game] dengan ID proses game 4. Coba Modifikasi RAM Sederhana Buat program C bernama contoh_ram.c:\n#include \u0026lt;stdio.h\u0026gt; int main() { int nilai = 10; printf(\u0026#34;Nilai awal: %d\\n\u0026#34;, nilai); printf(\u0026#34;PID: %d\\n\u0026#34;, getpid()); // Cetak ID proses while (1) { } // Program jalan terus } Langkah-langkah:\nKompilasi \u0026amp; jalankan:\ngcc contoh_ram.c -o contoh_ram ./contoh_ram Output:\nNilai awal: 10 PID: 12345 # Catat PID ini Cari \u0026amp; Ubah Nilai di RAM (di terminal lain):\nsudo scanmem 12345 # Ganti 12345 dengan PID program Di scanmem:\n\u0026gt; 10 # Cari nilai \u0026#34;10\u0026#34; di RAM \u0026gt; list # Lihat alamat memory yang menyimpan 10 \u0026gt; [alamat] 9999 # Ganti nilai di alamat itu jadi 9999 Lihat terminal program contoh_ram → Nilai berubah!\n5. Visualisasi RAM dalam Program Alamat RAM Nilai 0x7ffc1234 10 # Awalnya 0x7ffc1234 9999 # Setelah dimodifikasi 3. Disk (Storage: HDD/SSD) Apa itu? Penyimpanan permanen untuk program dan data (seperti file EXE, DLL, atau dokumen). Fungsi dalam RE: File di disk (misalnya, binary/executable) adalah target utama reverse engineering. Anda menganalisis bagaimana program disimpan di disk (struktur file, kode terkompilasi, dll.). Contoh: Tools seperti Ghidra atau IDA Pro membaca file EXE dari disk untuk dianalisis. 1. Disk vs RAM: Perbedaan Krusial RAM Disk (HDD/SSD) Penyimpanan sementara (volatile) Penyimpanan permanen (non-volatile) Akses cepat (CPU langsung baca) Akses lambat Contoh: Variabel program Contoh: File EXE, DLL, dokumen Dalam RE:\nFile di disk (seperti binary ls atau chrome) adalah target analisis. Kita bisa memodifikasi file di disk untuk mengubah perilaku program. 2. Analisis File Binary dengan radare2 Contoh Praktis: Kita akan analisis binary sederhana di Linux (bisa pakai /bin/ls atau buat program sendiri).\nLangkah 1: Buat Program Sederhana Buat file contoh_disk.c:\n#include \u0026lt;stdio.h\u0026gt; void greet() { printf(\u0026#34;Password: 12345\\n\u0026#34;); // Target kita: temukan string ini di binary! } int main() { greet(); return 0; } Kompilasi:\ngcc contoh_disk.c -o contoh_disk Langkah 2: Buka Binary dengan radare2 r2 -AAA ./contoh_disk # Buka file dengan analisis penuh Perintah Dasar radare2 Cari Fungsi (main dan greet)\n[0x00401050]\u0026gt; afl # List semua fungsi [0x00401050]\u0026gt; s main # Pindah ke fungsi main [0x00401050]\u0026gt; pdf # Disassemble fungsi Output:\n┌ 23: int main (); │ 0x00401112 55 push rbp │ 0x00401113 4889e5 mov rbp, rsp │ 0x00401116 e8d5ffffff call greet ; Panggil fungsi greet │ 0x0040111b b800000000 mov eax, 0 │ 0x00401120 5d pop rbp └ 0x00401121 c3 ret Cari String \u0026ldquo;Password\u0026rdquo;\n[0x00401050]\u0026gt; iz # List semua string di binary Output:\nvaddr=0x00402004 paddr=0x00002004 ordinal=000 sz=12 len=11 section=.rodata type=ascii string=Password: 12345 Lihat Isi Disk (Hex View)\n[0x00401050]\u0026gt; px @ 0x00402004 # Lihat data di alamat string Output (hexdump):\n0x00402004 50 61 73 73 77 6f 72 64 3a 20 31 32 33 34 35 00 Password: 12345. Modifikasi Binary (Opsional)\nGanti string \u0026ldquo;12345\u0026rdquo; jadi \u0026ldquo;ABCDE\u0026rdquo;:\n[0x00401050]\u0026gt; wx ABCDE @ 0x0040200B # Overwrite di disk [0x00401050]\u0026gt; q # Keluar Jalankan program:\n./contoh_disk Output:\nPassword: ABCDE # String berhasil diubah! 3. Visualisasi Struktur File di Disk Binary `contoh_disk` di Disk: ┌─────────────────┐ │ Header (ELF) │ # Informasi metadata ├─────────────────┤ │ .text │ # Kode mesin (fungsi main, greet) ├─────────────────┤ │ .rodata │ # String \u0026#34;Password: 12345\u0026#34; ├─────────────────┤ │ ... │ # Section lain └─────────────────┘ radare2 membantu melihat/memodifikasi bagian ini. 4. Contoh Nyata: Analisis /bin/ls r2 -AAA /bin/ls Cari fungsi main: [0x00401050]\u0026gt; afl~main # Cari fungsi main [0x00401050]\u0026gt; s main # Pindah ke main [0x00401050]\u0026gt; pdf # Disassemble Cari string (misalnya pesan error): [0x00401050]\u0026gt; iz~cannot # Cari string \u0026#34;cannot\u0026#34; 5. Fungsi dalam Reverse Engineering Menganalisis malware (file binary mencurigakan). Memodifikasi program (crack license, bypass auth). Memahami struktur executable (ELF, PE). 4. Register Apa itu? Penyimpanan kecil super cepat di dalam CPU untuk memproses data secara langsung. Fungsi dalam RE: Register menyimpan nilai sementara saat CPU menjalankan instruksi (misalnya, hasil perhitungan atau alamat memory). Dalam assembly/RE, Anda sering melihat register seperti: EAX/RAX: Menyimpan hasil operasi. EIP/RIP: Menunjuk ke instruksi berikutnya yang akan dijalankan. Contoh: Saat debugging dengan x64dbg, Anda memantau perubahan register untuk memahami alur program. Bayangkan register seperti meja kecil di depan koki (CPU):\nHanya muat sedikit data (4-8 byte), tapi paling cepat diakses. Dipakai untuk operasi matematis, alamat memory, dll. 1. Jenis Register Penting Register Fungsi Contoh (x64) RAX/EAX Menyimpan hasil operasi (return value) mov eax, 5 RIP/EIP Instruction Pointer (alamat instruksi berikutnya) 0x401000 RSP/ESP Stack Pointer (alamat stack) 0x7fffffff RBX/EBX Penyimpanan sementara mov ebx, eax Catatan:\nRAX (64-bit), EAX (32-bit), AX (16-bit), AH/AL (8-bit). EIP/RIP sangat penting untuk kontrol alur program (misal: eksploitasi buffer overflow). 2. Contoh Nyata dengan gdb Buat file contoh_register.c:\n#include \u0026lt;stdio.h\u0026gt; int main() { int a = 5; int b = 10; int c = a + b; // Perhatikan register RAX/EAX! return 0; } Langkah Debugging Kompilasi dengan debug info:\ngcc -g contoh_register.c -o contoh_register Buka dengan gdb:\ngdb ./contoh_register Set Breakpoint dan lihat register:\n(gdb) break main # Set breakpoint di main (gdb) run # Jalankan program (gdb) disassemble # Lihat assembly (gdb) info registers # Lihat semua register Output Assembly mov DWORD PTR [rbp-0x4], 0x5 ; a = 5 mov DWORD PTR [rbp-0x8], 0xa ; b = 10 mov eax, DWORD PTR [rbp-0x4] ; EAX = a add eax, DWORD PTR [rbp-0x8] ; EAX += b (EAX = 15) Monitor Register Sebelum add, cek eax: (gdb) p $eax # Output: 5 Setelah add, cek lagi: (gdb) p $eax # Output: 15 3. Reverse Engineering dengan Register Memodifikasi RIP/EIP: Mengubah alur eksekusi program (misal: loncat ke fungsi rahasia). Membaca RAX/EAX: Mendapatkan hasil perhitungan (misal: hasil dekripsi password). Contoh Game Hacking:\nCari alamat nilai \u0026ldquo;nyawa player\u0026rdquo; di RAM. Trace instruksi yang mengubah nilai itu (misal: sub eax, 1). Ganti jadi add eax, 100 untuk cheat unlimited health! 4. Visualisasi Register CPU ┌─────────────┐ │ RAX = 15 │ ← Hasil a + b │ RIP = 0x40 │ ← Alamat instruksi berikutnya │ RSP = 0x7f │ ← Alamat stack └─────────────┘ 5. Tools untuk Analisis Register Linux: gdb (dengan info registers). Windows: x64dbg/OllyDbg (tampilan GUI lebih mudah). Radare2: r2 -d ./contoh_register [0x00401050]\u0026gt; dr # Lihat register [0x00401050]\u0026gt; ds # Step instruksi Kesimpulan Register adalah \u0026ldquo;tangan\u0026rdquo; CPU untuk memanipulasi data. EAX/RAX dan EIP/RIP paling sering dipantau saat RE. Latihan: Gunakan gdb untuk modifikasi nilai register (set $eax=100). Coba ubah RIP untuk loncat ke fungsi lain (advanced). Tips:\nPelajari assembly dasar (mov, add, jmp) untuk memahami register. Jika bingung, ulangi contoh gdb di atas! Next: Gabungkan konsep CPU, RAM, Disk, dan Register untuk analisis binary lengkap! 🚀\nAnalog Sederhana untuk Pemula Bayangkan komputer seperti tukang masak (CPU) yang:\nMengambil resep dari buku masak (disk), Menyiapkan bahan di meja dapur (RAM), Mengolah bahan dengan tangan/alat kecil (register). Dalam reverse engineering, Anda adalah orang yang:\nMembongkar resep (program) untuk melihat bagaimana ia bekerja, Memodifikasi bahan (memory/register) untuk mengubah hasil masakan (perilaku program). Penting untuk Reverse Engineering CPU + Register: Memahami assembly language (bahasa mesin) untuk melacak eksekusi program. Memory: Mem-scan/memodifikasi nilai saat runtime (misalnya, bypassing license check). Disk: Menganalisis file binary/executable untuk menemukan vulnerability atau algoritma. Mulailah dengan tools seperti Cheat Engine (memory editing) atau Ghidra (binary analysis) untuk mempraktikkan konsep ini!\n","permalink":"/posts/reverse-engineering-01/","title":"Apa itu CPU, memory, disk, register dalam reverse engineering (RE)"},{"content":"","permalink":"/posts/","title":"Posts"},{"content":"","permalink":"/tags/pwn/","title":"Pwn"},{"content":"","permalink":"/tags/","title":"Tags"},{"content":"","permalink":"/tags/chess/","title":"Chess"},{"content":"♟️ Opening Catur: Sicilian Defense (Pertahanan Sisilia) Salah satu opening paling agresif dan sering dipakai Grandmaster dunia. Cocok buat kamu yang suka gaya main counter-attack!\n📌 Dasar Opening Langkah:\n1. e4 c5 Hitam menyerang pusat dengan pion sayap, bukan pion tengah seperti e5. Tujuannya mengganggu dominasi Putih dan membuka jalan bagi kuda dan gajah.\nPutih: 1. e4 Menguasai pusat (d5 \u0026amp; f5), membuka jalur untuk gajah dan menteri.\nHitam: 1\u0026hellip; c5 Tidak langsung menantang pion e4 dengan e5, tapi menyerang d4 secara tidak langsung. → Tujuan:\nMengganggu dominasi Putih di pusat.\nMenyiapkan kontrol atas petak d4 dengan pion c dan kuda Nc6.\nMenciptakan ketidakseimbangan posisi sejak awal (asimetri).\nKelebihan Sicilian:\nPeluang menang lebih tinggi untuk Hitam dibanding e5.\nFleksibel: bisa masuk varian tajam (Najdorf, Dragon) atau solid (Scheveningen).\n🧩 3 Variasi Populer Sicilian Defense 1. 🛡️ Najdorf Variation Langkah:\n1. e4 c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6 5. Nc3 a6 Variasi ini dikenal sebagai Najdorf Variation, salah satu sistem paling terkenal dan ditakuti dalam Sicilian Defense.\nLangkah 5\u0026hellip;a6 adalah ciri khasnya. Tujuan utamanya:\n🔒 Mencegah manuver kuda atau gajah putih ke petak b5, yang bisa mengganggu pengembangan atau menukar gajah penting Hitam di e7.\n📈 Menyiapkan ekspansi sayap ratu, terutama dengan \u0026hellip;b5 dan \u0026hellip;Bb7 di masa depan.\n⏳ Menunda komitmen pion tengah (seperti \u0026hellip;e5 atau \u0026hellip;e6), sambil memantau posisi putih lebih lanjut.\n🧠 Karakter Posisi\nHitam bermain fleksibel, tidak langsung menyatakan niat tengah.\nPutih bisa melanjutkan dengan berbagai sistem: Be3 (English Attack), Bg5, atau f4 (Sozin/Velimirovic).\nKamu bisa melihat gameplay dari Mikhail Tal vs Olafsson dalam bermain opening variasi najdorf ini\n2. 🌀 Dragon Variation Langkah:\n1. e4 c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6 5. Nc3 g6 Hitam mempersiapkan fianchetto gajah ke g7. Posisi gajah seperti \u0026ldquo;naga\u0026rdquo; yang mengontrol diagonal panjang.\nDengan 5\u0026hellip;g6, Hitam memilih Dragon Variation, dinamai dari bentuk pionnya yang menyerupai ekor naga. Tujuan utama langkah ini:\n🔭 Menyiapkan fianchetto gajah ke g7, yang akan mengontrol diagonal panjang h8–a1.\n🛡️ Membuat pertahanan solid di sayap raja.\n⚔️ Memicu permainan tajam—Putih biasanya menyerang di sayap raja, sementara Hitam menyerang balik di sayap ratu.\n3. 🧱 Scheveningen Variation Langkah:\n1. e4 c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6 5. Nc3 e6 Pada langkah kelima, langkah \u0026hellip;e6 dari Hitam membentuk formasi pion d6-e6, yang sering disebut sebagai \u0026ldquo;struktur Scheveningen\u0026rdquo; — dikenal karena kestabilannya.\nFormasi ini memberikan beberapa keuntungan strategis bagi Hitam:\nSolid dan fleksibel: Kombinasi pion d6 dan e6 menjaga pusat dan meminimalkan kelemahan di awal permainan.\nMenahan serangan cepat Putih: Dengan posisi yang kompak, Hitam tidak terlalu rentan terhadap serangan awal seperti Greek Gift atau serangan minor di sayap raja.\nPengembangan bidak fleksibel: Hitam bisa memilih untuk mengembangkan gajah gelap ke e7 atau bahkan ke b4, tergantung situasi. Kuda juga bisa manuver ke rute c6-a5-c4 jika dibutuhkan.\nTidak buru-buru menyerang: Hitam tidak langsung melancarkan serangan balik, melainkan menyiapkan posisi yang kuat sebelum memilih arah permainan — bisa bertahan, menyerang pusat, atau bermain di sayap.\nSingkatnya, struktur ini adalah pilihan strategis bagi Hitam untuk mendapatkan posisi solid tanpa terlalu membuka diri terhadap taktik cepat dari lawan.\n✅ Tips Buat Pemula Pelajari satu variasi dulu sampai paham. Jaga struktur pion biar gak gampang diserang. Jangan asal nyerang, tunggu momen counter yang pas! 🏁 Penutup Sicilian Defense cocok banget buat kamu yang gak suka gaya main pasif. Dengan memahami 3 variasi di atas, kamu bisa makin percaya diri saat pegang Hitam!\nKalau kamu suka artikel ini, jangan lupa share ke temenmu yang suka catur juga! 😉\n","permalink":"/posts/sicilian-defense/","title":"Panduan Opening Catur: Sicilian Defense + 3 Variasi Populer"},{"content":"","permalink":"/tags/pentest/","title":"Pentest"},{"content":"\nMr. Robot showcases a variety of hacking techniques and skills that can serve as a roadmap for aspiring ethical hackers. Below is a concise guide to hacking methods and essential skills based on the series.\nCore Skills to Master Social Engineering: Manipulate human behavior to extract sensitive information.\nNetwork Analysis: Use tools like Wireshark to monitor traffic and detect vulnerabilities.\nCryptography: Encrypt and decrypt data, understand hashing algorithms, and break weak cryptographic implementations.\nPenetration Testing: Perform assessments to identify and exploit system weaknesses.\nReverse Engineering: Deconstruct software or malware to understand its functionality.\nScripting \u0026amp; Automation: Develop custom scripts in Python, Bash, or PowerShell.\nExploitation Frameworks: Master tools like Metasploit for streamlined attacks.\nDigital Forensics: Investigate and mitigate cyber incidents by analyzing digital evidence.\nPrivilege Escalation: Elevate access rights in compromised systems.\nTechniques Highlighted in Mr. Robot Password Attacks Brute force (e.g., using Hashcat).\nKeystroke logging (Keyloggers).\nNetwork Exploits Man-in-the-Middle (MITM) attacks.\nPacket sniffing and injection.\nDNS manipulation.\nSystem Exploitation Rootkits and privilege escalation.\nCold boot attacks to extract RAM data.\nZero-day exploits.\nPhysical Attacks USB Rubber Ducky to inject payloads.\nCloning drives for offline analysis.\nSocial Engineering Phishing and spear phishing campaigns.\nImpersonation to extract credentials.\nData Exfiltration Using encrypted channels or cloud storage to steal sensitive information.\nSteganography to hide data in plain sight.\nIoT \u0026amp; Smart Devices Exploiting IoT vulnerabilities to infiltrate networks. System Disruption Ransomware deployment.\nDistributed Denial of Service (DDoS) attacks.\nCustom Exploits Developing firmware backdoors for routers.\nWriting worms for automated network attacks.\nAdvanced Techniques Blockchain tracking to deanonymize transactions.\nHoneypot and honeynet setups for counter-intelligence.\nSuggested Learning Path Beginner Learn basic programming (Python, Bash).\nUnderstand networking fundamentals (TCP/IP, DNS).\nExplore Linux systems and commands.\nIntermediate Practice penetration testing using tools like Metasploit and Burp Suite.\nExperiment with social engineering tactics in controlled environments.\nStart learning cryptography and encryption techniques.\nAdvanced Develop exploits using zero-day vulnerabilities.\nDive into reverse engineering malware and advanced network forensics.\nExplore IoT device hacking and hardware-level attacks.\nThis roadmap combines fictional inspiration with real-world applicability. By mastering these skills and techniques, you can become a proficient ethical hacker or cybersecurity expert.\nif i\u0026rsquo;m (writer) have some failure explanation, you can give pull request or suggestion. all contributions are welcome.\nhttps://github.com/hnvdie/hnvdie.github.io/tree/master/content/posts\n","permalink":"/posts/how-to-become-a-hacker/","title":"Roadmap to Become an Expert Hacker (Inspired by Mr. Robot)"},{"content":"","permalink":"/tags/analysis/","title":"Analysis"},{"content":"\nGhostNet adalah sebuah alat pengelola investasi crypto yang saya buat untuk membantu kamu dalam melacak nilai investasi dan return dari berbagai mata uang kripto. Dengan antarmuka yang sederhana, program ini dapat membantu kamu mengatur dan memantau aset crypto dengan lebih terstruktur.\nFitur Utama Tambah Investasi \u0026amp; Return: Menambahkan nilai investasi dan return untuk setiap mata uang kripto yang kamu pilih. Edit Data: Mengubah data investasi dan return jika terjadi perubahan nilai. Hapus Data: Menghapus data untuk mata uang kripto yang sudah tidak kamu perhatikan. Statistik Lengkap: Menampilkan total investasi, return, serta keuntungan atau kerugian secara keseluruhan. Desain Sederhana: Tampilan yang bersih dan mudah dipahami, cocok untuk pengguna pemula hingga yang sudah berpengalaman. Penjelasan Kode Program Di bawah ini adalah penjelasan mengenai bagian-bagian kode GhostNet yang saya buat, serta bagaimana setiap fungsi berperan dalam program.\n1. Fungsi read_data Fungsi ini digunakan untuk membaca file yang berisi data investasi dan return. Jika file tidak ditemukan, maka fungsi ini akan membuat file baru dengan header yang sudah ditentukan.\ndef read_data(filename): data = {} if not os.path.exists(filename): with open(filename, \u0026#39;w\u0026#39;) as f: f.write(\u0026#34;@ currency, invest, return\\n\u0026#34;) # Header file print(f\u0026#34;info: create new {filename}\u0026#34;) else: with open(filename, \u0026#39;r\u0026#39;) as f: lines = f.readlines()[1:] # Skip header line for line in lines: parts = line.strip().split(\u0026#39;, \u0026#39;) if len(parts) == 3: currency = parts[0].strip().lower() invest = int(parts[1]) return_value = int(parts[2]) data[currency] = {\u0026#39;invest\u0026#39;: invest, \u0026#39;return\u0026#39;: return_value} return data Fungsi write_data Fungsi ini digunakan untuk menulis data ke dalam file setelah terjadi perubahan, seperti menambah atau mengedit nilai investasi dan return.\ndef write_data(filename, data): with open(filename, \u0026#39;w\u0026#39;) as f: f.write(\u0026#34;@ currency, invest, return\\n\u0026#34;) # Header file for currency, values in data.items(): f.write(f\u0026#34;{currency.upper()}, {values[\u0026#39;invest\u0026#39;]}, {values[\u0026#39;return\u0026#39;]}\\n\u0026#34;) Fungsi add_investment Fungsi ini digunakan untuk menambah jumlah investasi pada mata uang kripto tertentu. Jika mata uang belum ada dalam data, fungsi ini akan menambahkannya.\ndef add_investment(data, currency, invest_amount): currency = currency.lower() if currency in data: data[currency][\u0026#39;invest\u0026#39;] += invest_amount else: data[currency] = {\u0026#39;invest\u0026#39;: invest_amount, \u0026#39;return\u0026#39;: 0} print(f\u0026#34;Investment added: {currency.upper()} with {format_currency(invest_amount)}\u0026#34;) Fungsi add_return Fungsi ini digunakan untuk menambahkan return yang diperoleh dari investasi pada mata uang kripto tertentu.\ndef add_return(data, currency, return_amount): currency = currency.lower() if currency in data: data[currency][\u0026#39;return\u0026#39;] += return_amount else: data[currency] = {\u0026#39;invest\u0026#39;: 0, \u0026#39;return\u0026#39;: return_amount} print(f\u0026#34;Return added: {currency.upper()} with {format_currency(return_amount)}\u0026#34;) Fungsi edit_data Fungsi ini memungkinkan kamu untuk mengubah nilai investasi dan return dari mata uang kripto yang ada.\ndef edit_data(data, currency, invest=None, return_value=None): currency = currency.lower() if currency in data: if invest is not None: data[currency][\u0026#39;invest\u0026#39;] = invest if return_value is not None: data[currency][\u0026#39;return\u0026#39;] = return_value print(f\u0026#34;Data edited for {currency.upper()}\u0026#34;) else: print(f\u0026#34;Currency {currency} not found.\u0026#34;) Fungsi delete_data Fungsi ini digunakan untuk menghapus data untuk mata uang yang sudah tidak lagi kamu perhatikan. Fungsi ini menjaga agar data tetap terorganisir.\ndef delete_data(data, currency): currency = currency.lower() if currency in data: del data[currency] print(f\u0026#34;{currency.upper()} data has been deleted.\u0026#34;) else: print(f\u0026#34;Currency {currency} not found.\u0026#34;) Fungsi display_statistics Fungsi ini akan menampilkan statistik total investasi, return, serta keuntungan atau kerugian dari seluruh data mata uang kripto yang tercatat.\ndef display_statistics(data): total_investment = sum([values[\u0026#39;invest\u0026#39;] for values in data.values()]) total_return = sum([values[\u0026#39;return\u0026#39;] for values in data.values()]) total_profit_loss = total_return - total_investment print(\u0026#34;-\u0026#34;*100) print(\u0026#34;Statistics:\u0026#34;) print(f\u0026#34;Total Investment: {format_currency(total_investment)}\u0026#34;) print(f\u0026#34;Total Return: {format_currency(total_return)}\u0026#34;) print(f\u0026#34;Total Profit/Loss: {format_currency(total_profit_loss)}\u0026#34;) print(\u0026#34;\\nCurrency Breakdown:\u0026#34;) for currency, values in data.items(): print(f\u0026#34;{currency.upper()}: Invest = {format_currency(values[\u0026#39;invest\u0026#39;])}, Return = {format_currency(values[\u0026#39;return\u0026#39;])}\u0026#34;) print(\u0026#34;-\u0026#34;*100) print() Fungsi format_currency Fungsi ini digunakan untuk memformat nilai investasi atau return menjadi lebih mudah dibaca, dengan menambahkan simbol mata uang dan memisahkan angka dengan titik.\ndef format_currency(amount, symbol=\u0026#34;USD\u0026#34;): return f\u0026#34;{symbol} {amount:,}\u0026#34;.replace(\u0026#34;,\u0026#34;, \u0026#34;.\u0026#34;) Cara Penggunaan Menambahkan Investasi Kamu bisa menambahkan investasi dengan memilih menu \u0026ldquo;Tambah Investasi\u0026rdquo; dan memasukkan jumlah dana yang kamu investasikan dalam mata uang crypto pilihanmu.\nMenambahkan Return Untuk menambah return, pilih menu \u0026ldquo;Tambah Return\u0026rdquo; dan masukkan jumlah return yang kamu peroleh.\nMengedit Data Jika ada perubahan, misalnya karena investasi atau return berubah, kamu bisa mengeditnya melalui menu \u0026ldquo;Edit Data\u0026rdquo;.\nMenghapus Data Jika ada mata uang kripto yang sudah tidak kamu perhatikan, kamu bisa menghapusnya dengan memilih \u0026ldquo;Hapus Data\u0026rdquo;.\nMelihat Statistik Menu \u0026ldquo;Statistik\u0026rdquo; akan menunjukkan gambaran umum tentang total investasi, return, serta profit atau kerugian yang kamu peroleh.\nPengembangan Lebih Lanjut Program ini masih dapat dikembangkan lebih lanjut, seperti penambahan fitur-fitur baru, integrasi dengan API untuk mengupdate data harga cryptocurrency secara otomatis, dan lainnya.\nKamu bisa mengakses GhostNet di Github.\n","permalink":"/posts/make-project-invest-tracker/","title":"Membuat Program Pengingat Investasi Crypto Sederhana Dengan Python"},{"content":"Trading adalah seni dan ilmu yang membutuhkan pemahaman mendalam terhadap berbagai alat dan indikator yang dapat membantu kita membuat keputusan yang lebih cerdas di pasar. Bagi pemula yang bingung dari mana memulai, artikel ini akan memberikan jalur pembelajaran yang sistematis dan terstruktur, mulai dari konsep dasar hingga teknik lanjutan. Setiap konsep dan alat yang akan dibahas memiliki peran penting dalam membentuk analisis teknikal yang kuat.\n1. Candlestick Patterns Candlestick patterns adalah fondasi dari analisis teknikal yang mengungkapkan psikologi pasar melalui formasi harga dalam grafik. Menguasai pola candlestick seperti Doji, Hammer, Engulfing, dan Morning/Evening Star akan memberikan wawasan penting tentang kemungkinan pembalikan harga atau kelanjutan tren. Belajar membaca candlestick akan menjadi langkah pertama yang krusial dalam memahami sentimen pasar.\n2. Volume Volume adalah salah satu indikator paling penting dalam analisis teknikal. Volume menunjukkan seberapa banyak transaksi yang terjadi pada suatu periode waktu. Kombinasi antara pergerakan harga dan volume memberikan sinyal yang lebih kuat. Misalnya, pergerakan harga yang didukung oleh volume yang besar menunjukkan bahwa tren tersebut lebih kuat dan berpotensi berkelanjutan.\n3. Support \u0026amp; Resistance / Supply \u0026amp; Demand Level support dan resistance adalah titik di mana harga cenderung berbalik arah. Support adalah area di mana harga biasanya berhenti turun, sementara resistance adalah area di mana harga cenderung berhenti naik. Supply and demand menggambarkan zona di mana terdapat keseimbangan antara penjual dan pembeli, yang mempengaruhi harga. Memahami kedua konsep ini adalah dasar yang penting dalam menetapkan titik entry dan exit.\n4. Additional Technical Indicators Ada berbagai indikator tambahan yang dapat digunakan untuk mengonfirmasi sinyal yang diberikan oleh grafik harga. Beberapa indikator yang populer antara lain:\nRSI (Relative Strength Index): Menunjukkan kondisi overbought atau oversold pada pasar. Jika RSI lebih dari 70, pasar dianggap overbought, dan jika di bawah 30, pasar dianggap oversold. MA (Moving Average) dan EMA (Exponential Moving Average): Digunakan untuk mengidentifikasi arah tren. MA sederhana memberikan rata-rata harga dalam periode waktu tertentu, sedangkan EMA lebih menekankan pada harga terbaru, memberikan sinyal yang lebih cepat. MACD (Moving Average Convergence Divergence): Menggunakan dua MA (biasanya 12 dan 26 hari) untuk menunjukkan sinyal beli atau jual. Ketika MACD melintasi garis sinyal, ini bisa menjadi sinyal untuk entry atau exit. Volume Oscillator: Mengukur perbedaan antara dua volume MA, memberikan wawasan tentang kekuatan tren. Stochastic Oscillator: Digunakan untuk mengukur momentum pasar. Jika nilai indikator mendekati 0, pasar oversold, dan jika mendekati 100, pasar overbought. Money Flow Index (MFI): Kombinasi antara volume dan harga untuk mengidentifikasi pembalikan harga. MFI yang tinggi menunjukkan kemungkinan pembalikan harga. 5. Price Action Price action adalah metode analisis yang hanya mengandalkan pergerakan harga tanpa menggunakan indikator teknikal tambahan. Ini mengajarkan kita untuk membaca pola pergerakan harga dan membuat keputusan berdasarkan konteks pasar saat itu, termasuk level-level harga kunci dan pola candlestick.\n6. Take Profit \u0026amp; Psychology Menentukan level take profit dan memahami psikologi trading adalah bagian integral dari setiap trading setup. Jangan hanya fokus pada strategi teknikal; penting untuk memahami kapan dan bagaimana keluar dari posisi, serta menjaga emosi tetap terkendali agar tidak terjebak dalam overtrading atau takut kehilangan kesempatan. Pengelolaan psikologi yang baik juga melibatkan pengendalian diri saat pasar bergerak melawan posisi kita dan pentingnya berpegang pada rencana trading untuk menghindari keputusan impulsif.\n7. Fibonacci Retracement and Extension Fibonacci adalah alat yang sangat berguna untuk menentukan level support dan resistance potensial. Dengan menggunakan level retracement (23.6%, 38.2%, 50%, 61.8%, dll.) dan ekstensi (127.2%, 161.8%), trader dapat memprediksi area pembalikan harga atau kelanjutan tren.\n8. PO3 (Pattern of 3) PO3 adalah konsep yang berbicara tentang pola pergerakan harga dalam tiga langkah. Misalnya, setelah harga melakukan pergerakan pertama dan kedua, langkah ketiga sering kali menjadi pergerakan yang signifikan, baik itu pembalikan atau kelanjutan tren. Mengidentifikasi PO3 dapat membantu trader menangkap peluang pasar yang lebih besar.\n9. Quarterly Theory Quarterly theory adalah pendekatan yang mengaitkan pergerakan harga dengan siklus tahunan dan triwulanan. Menurut teori ini, pasar bergerak dalam pola tertentu pada periode kuartalan, yang dapat digunakan untuk merencanakan strategi jangka menengah.\n10. Unicorn Model Unicorn model adalah pendekatan analisis teknikal yang menggabungkan berbagai indikator dan pola harga untuk mengidentifikasi titik-titik entry dan exit terbaik. Model ini menganggap pasar seperti unicorn—unik dan tidak dapat diprediksi, tetapi dengan pola yang dapat dianalisis dengan alat yang tepat.\n11. ICT (Inner Circle Trader) ICT adalah metode yang lebih maju yang mencakup pemahaman mendalam tentang dinamika pasar, termasuk manipulasi harga oleh institusi besar, struktur pasar, dan siklus harga. Teknik-teknik ICT mengajarkan trader untuk memahami bagaimana bank dan institusi besar bergerak di pasar dan bagaimana hal itu memengaruhi harga.\n12. AMD (Advanced Market Dynamics) AMD adalah pendekatan lanjutan yang melibatkan analisis pasar dengan fokus pada pergerakan harga berdasarkan dinamika internal pasar. Teknik ini juga mengamati perilaku pasar secara keseluruhan, seperti likuiditas dan sentimen pasar. Dalam AMD, trader belajar mengenali pola-pola pergerakan harga yang tidak terdeteksi oleh indikator teknikal sederhana.\n13. SBKZ SBKZ adalah metode analisis teknikal yang menggabungkan analisis grafik harga dengan analisis sentimen dan perilaku pasar. SBKZ bertujuan untuk memberikan wawasan yang lebih holistik tentang kondisi pasar dan memungkinkan trader untuk membuat keputusan yang lebih baik dengan mempertimbangkan banyak faktor yang mempengaruhi harga.\n14. MMXM MMXM adalah model yang menggabungkan berbagai pendekatan dalam analisis teknikal, dengan penekanan pada pengelolaan risiko dan strategi posisi. Model ini membantu trader memahami bagaimana mengelola portofolio dan menyesuaikan posisi dengan kondisi pasar. Pengelolaan risiko yang baik sangat penting untuk memastikan bahwa potensi kerugian tetap terkendali dalam setiap trading yang dilakukan.\n15. FVG (Fair Value Gap) \u0026amp; TS (Trend Shift) FVG dan TS adalah konsep lanjutan yang berfokus pada analisis gap harga (FVG) dan pergeseran tren (TS). FVG mengidentifikasi area harga di mana terjadi kesenjangan dalam pergerakan harga, sementara TS mengidentifikasi momen di mana tren pasar berbalik arah. Keduanya sangat berguna untuk mengidentifikasi titik-titik entry yang optimal dan memaksimalkan potensi keuntungan.\nRisiko dan Pengelolaan Keuangan dalam Trading Salah satu aspek yang sangat penting dalam trading adalah pengelolaan risiko dan manajemen keuangan. Meskipun banyak teknik dan indikator yang dapat membantu trader membuat keputusan yang lebih baik, tanpa pengelolaan risiko yang tepat, trader dapat dengan mudah kehilangan sebagian besar modal mereka. Salah satu aspek utama dalam pengelolaan risiko adalah penentuan ukuran posisi yang sesuai dengan tingkat toleransi risiko Anda. Menggunakan rasio risk-to-reward yang sehat, seperti 1:2 atau 1:3, akan memastikan bahwa kerugian yang Anda tanggung tetap lebih kecil dibandingkan dengan potensi keuntungan.\nSelain itu, penting untuk selalu menerapkan stop-loss dan take-profit pada setiap posisi trading Anda. Dengan memiliki batasan risiko yang jelas, Anda menghindari keputusan emosional yang bisa merugikan. Jangan lupa untuk selalu mengevaluasi kembali posisi Anda berdasarkan kondisi pasar yang berubah dan menjaga disiplin dalam menjalankan rencana trading.\nKesimpulan: Dari Zero ke Hero Trading bukanlah hal yang bisa dikuasai dalam semalam. Mulailah dengan membangun dasar yang kuat melalui candlestick patterns, volume, support-resistance, dan indikator teknikal dasar. Setelah itu, pelajari konsep-konsep lanjutan seperti Fibonacci, Price Action, dan teori-teori seperti ICT dan Unicorn Model untuk mengasah keterampilan analisis kamu.\nIngat, menjadi trader yang sukses membutuhkan disiplin, pemahaman yang mendalam tentang alat yang kamu gunakan, dan kemampuan untuk mengelola risiko serta psikologi trading. Jangan terburu-buru, nikmati proses belajar ini, dan terus berkembang untuk menjadi seorang trader yang lebih baik.\n","permalink":"/posts/technical-analysis-zero-to-hero/","title":"Panduan Lengkap Jalur Belajar Analisis Teknikal From Zero to Hero"},{"content":"","permalink":"/tags/projects/","title":"Projects"},{"content":" os command injection biasanya terjadi ketika seorang web developer keliru dalam mengatur penerimaan input didalam situsnya. biasanya terjadi ketika form input yang dibuat menggunakan fungsi seperti exec(), system(), dll. tergantung fungsi tersebut berasal dari bahasa pemogramman apa. jika python biasanya menggunakan os.system() atau eval(), etc.\ntentu saja ini jadi sesuatu yang sangat berbahaya dikarenakan attacker dapat memasukan perintah berbahaya kedalam shell sistem operasi yang ada disitus tersebut.\nSerangan command injection bisa terjadi ketika sebuah aplikasi (forms, cookies, HTTP headers, dll) bisa menjalankan perintah yang tidak aman dari inputan user ke sistem shell. crashtest security menurut crashtest security, os command injection tidak hanya bisa terjadi di forms melainkan bisa saja ditempat lain seperti diatas.\ndemonstrasi contoh kode php yang rentan dengan os command injection karena ketiadaan validasi input ataupun proses filtering.\n\u0026lt;?php $ip = $_GET[\u0026#39;ip\u0026#39;]; $cmd = system(\u0026#39;ping \u0026#39;.$ip); echo $cmd ?\u0026gt; buat file ping.php \u0026amp; jalankan diterminal kalian $ php -S 127.0.0.1:8000 -t .\nkunjungi dan cobalah masukan input seperti ini\nhttp://127.0.0.1:8000/ping.php?ip=cat%20/etc/passwd\nmaka jika dibrowser saya, ini tidak menghasilkan apa-apa. dikarenakan perintah cat /etc/passwd masih dianggap sebagai argumen untuk ping.\n[Thu Sep 1 18:16:34 2022] 127.0.0.1:41126 Accepted ping: unknown host cat [Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 [200]: GET /ping.php?ip=cat%20/etc/passwd [Thu Sep 1 18:16:34 2022] 127.0.0.1:41125 Closing bisa dilihat disana ada pesan uknown host cat. yang menandakan perintah cat kita dianggap destination dari ping. nah kalian bisa mencoba nya lagi dengan membatalkan perintah ping dengan shell escapes.\n; | || \u0026lt; \u0026amp; \u0026amp;\u0026amp; $() let\u0026rsquo;s try again\nhttp://127.0.0.1:8000/ping.php?ip=;cat /etc/passwd\nmaka kalian bisa melihat bahwa disini kita berhasil untuk melakukan perintah cat terhadap file passwd.\nbtw saya ngejalanin file php nya di termux, jadi output dari /etc/passwd nya agak aneh hhe.\nother references beberapa referensi lain yang membahas command injection lebih detail.\ncommand injection https://book.hacktricks.xyz/pentesting-web/command-injection ","permalink":"/posts/os-command-injection/","title":"tentang vulnerability os-command injection"},{"content":" write up sederhana tentang bagaimana saya bisa menemukan bug IP restriction bypass di situs sfile.mobi.\ndan mendapatkan reward yang lumayan, hanya karena laporan bug sepele ini.\nFYI (For you information) jadi sebelumnya saya menemukan data leakage dari salah satu website yang tidak bisa saya sebutkan. karena ini privasi web diluar sfile.mobi. yang mana data tersebut berisi informasi seperti username, password dan email. dikarenakan situs yang terdapat data leakage tersebut adalah situs yang memiliki latar belakang seperti sfile.mobi juga. yaitu service free file sharing service. jadinya saya mempunyai ide yang cukup cemerlang.\nkarena saya sering mengunjungi situs sfile.mobi buat download config :/\u0026lt; terlintas dalam pikiran saya.\n\u0026ldquo;apa para pengguna didata yang saya miliki ini, juga login disitus sfile.mobi?\u0026rdquo;\ndan yap tercetus lah ide untuk melakukan brute-forcing.\nProof OF Concept awalnya saya mencoba mengunjungi halaman sfile.mobi dan ke halaman loginnya untuk melakukan web scraping. yang URL nya berada disini.\nhttps://sfile.mobi/login.php\ndengan tujuan membuat tool atau bot otomatisasi login dengan ribuan data yang saya punya diatas tadi. awalnya saya hanya menulis program sederhana untuk mencobanya. dan ini hasil yang saya temukan.\nsource code: pastebin terlihat disana menunjukan status kode 401 dan programnya crash (stuck) tidak jalan lagi. dikarenakan halaman loginnya sudah tidak bisa diakses atau terkena limit IP. sama hal ketika saya kunjungi melalui browser, IP saya pun sudah terbanned.\nlantas saya mencoba alternatif lain untuk melakukan brute-force tanpa harus terkena limit IP.\nyang pertama saya mencoba dengan proxy namun tetap saja gagal, tidak bisa ditembus. langkah kedua saya mencoba melakukan injeksi terhadap headers ketika melakukan POST request.yaitu melakukan bypass IP source restrictions dengan HTTP headers.\ndisini saya hanya memodifikasi header nya dengan menambahkan nilai.\n\u0026#34;X-Forwarded-For\u0026#34;: IP SPOOF / FAKE IP untuk fake IP saya hanya membuat alamat ip random, asal-asalan saja. dengan syntax python seperti ini atau bisa lihat lengkap disource code bawah.\nip = \u0026#34;.\u0026#34;.join(map(str, (random.randint(0, 255) for _ in range(4)))) source code: pastebin ketika saya jalankan programnya, ternyata IP limit bypassed. saya mencoba ngeload sekitar ribuan akun ternyata bisa dan mendapatkan banyak akun yang online (registered) di platform sfile.mobi.\nstatus bug: patched Referensi tentang IP restriction bypass 403/401 Bypasses https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/403-and-401-bypasses 403/401 bypass hackerone report https://hackerone.com/reports/991717 IP restriction (root-me CTF) https://archiko.my.id/archives/root-me-writeup-ip-restriction-bypass/ 403 bypass - medium https://sapt.medium.com/bypassing-403-protection-to-get-pagespeed-admin-access-822fab64c0b3 ","permalink":"/posts/bypass-ip-restriction-at-sfile.mobi/","title":"Bypass IP restriction at sfile.mobi - writeup"},{"content":"","permalink":"/tags/writeups/","title":"Writeups"},{"content":" notes: in this article if you found text like this here is a tools or platforms. you just search that on google or other search engines. this article will be to always updated if me found new techniques or methods. base whois: whois ssl information: sslscan dns enumeration: dnsrecon nslookup dnsx dnsenum identify web technology: whatweb wappalyzer cmsmap check webapp firewall: wafw00f check security headers: shcheck subdo enumeration: subfinder sublist3r knock extracting all IP from collected subdodomain port scanning \u0026amp; banner grabbing: nmap amass aquatone naabu check domain takeover: subzy domain \u0026amp; subdo osint: shodan censys check http(s) 80/443: httpx \u0026gt; altdns \u0026gt; nuclei reverse IP lookup hackertarget googledork bing Content discovery Fuzzing\ngetting directory, files, sensitive data. scan error like system crash, sql injection, etc. with fuzzing technique\nwfuzz: Web application fuzzer ffuf: Fast web fuzzer written in Go fuzzdb Dictionary of attack patterns and primitives for black-box application fault injection and resource discovery. links and urls\ngetting js files, php, aspx and other interesting files or urls. for scanning endpoint, API path, etc.\ngau: Fetch known URLs from AlienVault\u0026rsquo;s Open Threat Exchange, the Wayback Machine, and Common Crawl. waybackurls: Fetch all the URLs that the Wayback Machine knows about for a domain getJS: A tool to fastly get all javascript sources/files linkfinder: A python script that finds endpoints in JavaScript files assetfinder: Find domains and subdomains related to a given domain Parameters\nparameth: This tool can be used to brute discover GET and POST parameters\nParamSpider: Mining parameters from dark corners of Web Archives\nffuf\ncommix Other helper\ngobuster: Directory/File, DNS and VHost busting tool written in Go\ngospider: Gospider - Fast web spider written in Go\nhakrawler: Simple, fast web crawler designed for easy, quick discovery of endpoints and assets within a web application\ngit-hound: Reconnaissance tool for GitHub code search. Finds exposed API keys using pattern matching, commit history searching, and a unique result scoring system.\npagodo: pagodo (Passive Google Dork) - Automate Google Hacking Database scraping and searching\nExtra resources for you :3 Cool Recon techniques every hacker misses! 🔥🔥 https://infosecwriteups.com/cool-recon-techniques-every-hacker-misses-1c5e0e294e89\n","permalink":"/posts/reconnaissance-summary/","title":"summary of reconnaissance for web application bug hunting 🕷"},{"content":"HnvDie 🕷️ ","permalink":"/","title":"HnvDie"}]