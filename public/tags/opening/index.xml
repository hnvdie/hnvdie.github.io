<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opening on </title>
    <link>/tags/opening/</link>
    <description>Recent content in Opening on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 19 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/opening/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Panduan Opening Catur: Sicilian Defense &#43; 3 Variasi Populer</title>
      <link>/posts/sicilian-defense/</link>
      <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
      <guid>/posts/sicilian-defense/</guid>
      <description>&lt;h2 id=&#34;-opening-catur-sicilian-defense-pertahanan-sisilia&#34;&gt;‚ôüÔ∏è Opening Catur: Sicilian Defense (Pertahanan Sisilia)&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Salah satu opening paling agresif dan sering dipakai Grandmaster dunia. Cocok buat kamu yang suka gaya main counter-attack!&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-dasar-opening&#34;&gt;üìå Dasar Opening&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Langkah:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. e4 c5&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;div id=&#34;board&#34; style=&#34;width: 100%; max-width: 400px; margin: 0 auto;&#34;&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;text-align: center; margin-top: 10px;&#34;&gt;&#xA;  &lt;button onclick=&#34;stepBackward()&#34;&gt;‚è™&lt;/button&gt;&#xA;  &lt;button onclick=&#34;prevMove()&#34;&gt;‚óÄÔ∏è&lt;/button&gt;&#xA;  &lt;button onclick=&#34;nextMove()&#34;&gt;‚ñ∂Ô∏è&lt;/button&gt;&#xA;  &lt;button onclick=&#34;stepForward()&#34;&gt;‚è©&lt;/button&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script src=&#34;/chess/chess.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;/chess/chessboard.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;/chess/chessboard.css&#34;&gt;&#xA;&lt;script&gt;&#xA;  const moves = &#34;1. e4 c5 2. Nf3 d6 3. d4 cxd4 4. Nxd4 Nf6&#34;.replace(/\s+/g, &#39; &#39;).trim();&#xA;  const chess = new Chess();&#xA;  const moveArray = moves.split(&#39; &#39;).filter(m =&gt; !/^\d+\./.test(m)); &#xA;  let currentIndex = 0;&#xA;  const board = Chessboard(&#39;board&#39;, {&#xA;    draggable: false,&#xA;    position: &#39;start&#39;,&#xA;    pieceTheme: &#39;/chess/img/chesspieces/wikipedia/{piece}.png&#39;&#xA;  });&#xA;&#xA;  function updateBoard() {&#xA;    const temp = new Chess();&#xA;    for (let i = 0; i &lt; currentIndex; i++) {&#xA;      temp.move(moveArray[i]);&#xA;    }&#xA;    board.position(temp.fen());&#xA;  }&#xA;&#xA;  function nextMove() {&#xA;    if (currentIndex &lt; moveArray.length) {&#xA;      currentIndex++;&#xA;      updateBoard();&#xA;    }&#xA;  }&#xA;&#xA;  function prevMove() {&#xA;    if (currentIndex &gt; 0) {&#xA;      currentIndex--;&#xA;      updateBoard();&#xA;    }&#xA;  }&#xA;&#xA;  function stepForward() {&#xA;    currentIndex = moveArray.length;&#xA;    updateBoard();&#xA;  }&#xA;&#xA;  function stepBackward() {&#xA;    currentIndex = 0;&#xA;    updateBoard();&#xA;  }&#xA;&#xA;  updateBoard(); &#xA;&lt;/script&gt;&#xA;&#xA;&lt;div id=&#34;board&#34; style=&#34;width: 100%; max-width: 400px; margin: 0 auto;&#34;&gt;&lt;/div&gt;&#xA;&lt;div style=&#34;text-align: center; margin-top: 10px;&#34;&gt;&#xA;  &lt;button onclick=&#34;stepBackward()&#34;&gt;‚è™&lt;/button&gt;&#xA;  &lt;button onclick=&#34;prevMove()&#34;&gt;‚óÄÔ∏è&lt;/button&gt;&#xA;  &lt;button onclick=&#34;nextMove()&#34;&gt;‚ñ∂Ô∏è&lt;/button&gt;&#xA;  &lt;button onclick=&#34;stepForward()&#34;&gt;‚è©&lt;/button&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script src=&#34;/chess/chess.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;/chess/chessboard.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;/chess/chessboard.css&#34;&gt;&#xA;&lt;script&gt;&#xA;  const moves = &#34;rnbqkbnr\/pp1ppppp\/8\/2p5\/4P3\/8\/PPPP1PPP\/RNBQKBNR&#34;.replace(/\s+/g, &#39; &#39;).trim();&#xA;  const chess = new Chess();&#xA;  const moveArray = moves.split(&#39; &#39;).filter(m =&gt; !/^\d+\./.test(m)); &#xA;  let currentIndex = 0;&#xA;  const board = Chessboard(&#39;board&#39;, {&#xA;    draggable: false,&#xA;    position: &#39;start&#39;,&#xA;    pieceTheme: &#39;/chess/img/chesspieces/wikipedia/{piece}.png&#39;&#xA;  });&#xA;&#xA;  function updateBoard() {&#xA;    const temp = new Chess();&#xA;    for (let i = 0; i &lt; currentIndex; i++) {&#xA;      temp.move(moveArray[i]);&#xA;    }&#xA;    board.position(temp.fen());&#xA;  }&#xA;&#xA;  function nextMove() {&#xA;    if (currentIndex &lt; moveArray.length) {&#xA;      currentIndex++;&#xA;      updateBoard();&#xA;    }&#xA;  }&#xA;&#xA;  function prevMove() {&#xA;    if (currentIndex &gt; 0) {&#xA;      currentIndex--;&#xA;      updateBoard();&#xA;    }&#xA;  }&#xA;&#xA;  function stepForward() {&#xA;    currentIndex = moveArray.length;&#xA;    updateBoard();&#xA;  }&#xA;&#xA;  function stepBackward() {&#xA;    currentIndex = 0;&#xA;    updateBoard();&#xA;  }&#xA;&#xA;  updateBoard(); &#xA;&lt;/script&gt;&#xA;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
